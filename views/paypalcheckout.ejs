<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link rel="stylesheet" href="/stylesheets/style.css" />
    <!-- includes the Braintree JS client SDK -->
    <script src="https://js.braintreegateway.com/web/3.85.2/js/client.min.js"></script>
    <script src="https://js.braintreegateway.com/web/3.85.2/js/paypal-checkout.min.js"></script>
    <script src="https://js.braintreegateway.com/web/3.85.2/js/data-collector.min.js"></script>
    <script src="https://pay.google.com/gp/p/js/pay.js"></script>
    <script src="https://js.braintreegateway.com/web/3.85.2/js/google-payment.min.js"></script>
  </head>
  <body>
    <div id="paypal-button"></div>

    <script>
      (async () => {
        let myDeviceData;

        let clientToken = await fetch('/api/client-token')
          .then((response) => response.text())
          .catch((error) => console.log('error', error));
        console.log(clientToken);

        let btClient = braintree.client.create({
          authorization: clientToken,
        });

        btClient
          .then((clientInstance) =>
            braintree.paypalCheckout.create({
              client: clientInstance,
              autoSetDataUserIdToken: true,
            })
          )
          .then((paypalCheckoutInstance) =>
            paypalCheckoutInstance.loadPayPalSDK({
              currency: 'USD',
              intent: 'capture',
              'enable-funding': 'venmo',
              'disable-funding': 'card',
            })
          )
          .then((paypalCheckoutInstance) => {
            return paypal
              .Buttons({
                createOrder: () => {
                  let response = paypalCheckoutInstance.createPayment({
                    flow: 'checkout',
                    amount: 1.0,
                    currency: 'USD',
                    intent: 'capture',
                    requestBillingAgreement: true,
                    enableShippingAddress: true,
                    shippingAddressEditable: false,
                    shippingAddressOverride: {
                      recipientName: 'Scruff McGruff',
                      line1: '1234 Main St.',
                      line2: 'Unit 1',
                      city: 'Chicago',
                      countryCode: 'US',
                      postalCode: '60652',
                      state: 'IL',
                      phone: '123.456.7890',
                    },
                    displayName: 'This is an apple',
                  });
                  return response;
                  console.log('createOrder');
                  console.log(response);
                },

                onApprove: (data, actions) => {
                  paypalCheckoutInstance
                    .tokenizePayment(data)
                    .then((payload) => {
                      console.log(payload);
                      fetch('/api/checkout', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({
                          paymentMethodNonce: payload.nonce,
                        }),
                      })
                        .then((result) => result.json())
                        .then((result) => console.log(result))
                        .catch((err) => console.log(err));
                    });
                },

                onCancel: (data) => {
                  console.log(
                    'PayPal payment canceled',
                    JSON.stringify(data, 0, 2)
                  );
                },

                onError: (err) => {
                  console.error('PayPal error', err);
                },
              })
              .render('#paypal-button');
          })
          .then(() => {})
          .catch((err) => console.error(err));
      })();
    </script>
  </body>
</html>
