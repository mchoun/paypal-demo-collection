<!DOCTYPE html>
<html>

<head>
  <title>
    <%= title %>
  </title>
  <link rel='stylesheet' href='/stylesheets/style.css' />
  <!-- includes the Braintree JS client SDK -->
  <script src="https://js.braintreegateway.com/web/3.85.2/js/client.min.js"></script>
  <script src="https://js.braintreegateway.com/web/3.85.2/js/paypal-checkout.min.js"></script>
  <script src="https://js.braintreegateway.com/web/3.85.2/js/data-collector.min.js"></script>
  <script src="https://pay.google.com/gp/p/js/pay.js"></script>
  <script src="https://js.braintreegateway.com/web/3.85.2/js/google-payment.min.js"></script>

</head>

<body>
  <div id="paypal-button"></div>

  <script>
    (async () => {

      let myDeviceData;

      let clientToken = await fetch("/api/client-token")
        .then(response => response.text())
        .catch(error => console.log('error', error));

      let btClient = braintree.client.create({
        authorization: clientToken
      });



      btClient.then(clientInstance => braintree.paypalCheckout.create({ client: clientInstance }))
        .then(paypalCheckoutInstance => paypalCheckoutInstance.loadPayPalSDK({ vault: true }))
        .then((paypalCheckoutInstance) => {
          return paypal.Buttons({
            createBillingAgreement: () => {
              return paypalCheckoutInstance.createPayment({
                flow: 'vault',
              });
            },

            onApprove: (data, actions) => {
              paypalCheckoutInstance.tokenizePayment(data).then(payload => {

                const requestBody = {
                  paymentMethodNonce: payload.nonce, amount: "1.00", options: {
                    storeInVaultOnSuccess: true
                  }
                }
                fetch('/api/checkout',
                  {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(requestBody)
                  })
                  .then(result => result.json())
                  .then(result => console.log(result))
                  .catch(err => console.log(err))
              })
            },

            onCancel: (data) => {
              console.log('PayPal payment canceled', JSON.stringify(data, 0, 2));
            },

            onError: (err) => {
              console.error('PayPal error', err);
            }
          }).render('#paypal-button');
        }).then(() => {

        }).catch(err => console.error(err));


    })();
  </script>
</body>

</html>